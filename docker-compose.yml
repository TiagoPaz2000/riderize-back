version: '3.9'
services:
  postgres:
    image: postgres:10.3
    restart: always
    container_name: postgres
    environment:
      - POSTGRES_USER=root
      - POSTGRES_PASSWORD=docker
      - POSTGRES_DB=riderize
    volumes:
      - postgres:/var/lib/postgresql/data
    ports:
      - '5432:5432'
    healthcheck:
      test: ["CMD", "pg_isready", "-d", "riderize"]
      timeout: 10s
      retries: 5

  adminer:
    image: adminer
    ports:
      - 8080:8080

  app:
    build: ./
    restart: always
    platform: linux/amd64
    container_name: app_back
    command: dev:compose
    ports:
      - '3001:3001'
    volumes:
      - ./src:/app/src
    environment:
      - DATABASE_URL=postgresql://root:docker@postgres:5432/riderize?schema=riderize
      - API_PORT=3001
      - JWT_SECRET=secret
    healthcheck:
      test: ["CMD", "lsof", "-t", "-i:3001"]
      timeout: 10s
      retries: 5
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy

  redis:
    image: redis:6.2-alpine
    restart: always
    ports:
      - '6379:6379'
    command: redis-server --save 20 1 --loglevel warning --requirepass docker
    volumes: 
      - cache:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      timeout: 10s
      retries: 5

volumes:
  cache:
    driver: local
  postgres: